includes:
  - setup: ./setup.yaml
  - build: ./build.yaml

tasks:
  - name: api-auth
    description: "run end-to-end tests (assumes api server is running on port 8080)"
    actions:
      - task: build:ui
      - cmd: npm run test:install # install playwright
        dir: ui
      - task: build:api
      - task: setup:k3d
      - task: deploy-load
      - cmd: npm run test:api-auth
        dir: ui

  - name: e2e
    description: "run end-to-end tests (assumes api server is running on port 8080)"
    actions:
      - task: build:ui
      - cmd: npm run test:install # install playwright
        dir: ui
      - task: build:api
      - task: setup:k3d
      - task: deploy-load
      - cmd: npm run test:integration
        dir: ui

  - name: go-unit
    description: "run api server unit tests"
    actions:
      - cmd: go test -failfast -v -timeout 30m --tags=unit ./...

  - name: ui-unit
    description: "run frontend unit tests"
    actions:
      - cmd: npm ci && npm run test:unit
        dir: ui

  - name: unit
    description: "run all unit tests (backend and frontend)"
    actions:
      - task: build:ui
        description: "build ui since embedded in main.go"
      - task: go-unit
      - task: ui-unit

  - name: api
    description: "run api server tests"
    actions:
      - description: "build ui since embedded in main.go"
        task: build:ui
      - task: setup:k3d
      - task: deploy-load
      - cmd: npm ci && npm run load:api
        dir: hack/load-test
      - cmd: uds zarf tools kubectl apply -f hack/load-test/rc.yaml
        description: apply runtime class manually cause KFC is silly
      - cmd: go test -failfast -v -timeout 30m --tags=integration ./...

  - name: deploy-load
    description: "deploy some Zarf packages to test against"
    actions:
      - task: deploy-min-core
      - cmd: uds zarf dev deploy
        dir: ui/tests/packages/podinfo

  - name: deploy-min-core
    description: install min resources for UDS Core
    actions:
      # todo: refactor this with UDS functional layers: https://github.com/defenseunicorns/uds-runtime/issues/172
      - cmd: rm -fr tmp && git clone --depth=1 https://github.com/defenseunicorns/uds-core.git tmp/uds-core
        description: clone UDS Core
      - cmd: npm ci && npx pepr deploy --confirm
        description: deploy UDS Core's Pepr module
        dir: tmp/uds-core
      - cmd: |
          helm repo add istio https://istio-release.storage.googleapis.com/charts
          helm upgrade -i istio-base istio/base -n istio-system --set defaultRevision=default --create-namespace
        description: install Istio CRDs
      - cmd: |
          helm repo add minio https://charts.min.io/
          helm upgrade -i -n uds-dev-stack minio minio/minio --create-namespace --set replicas=1 --set mode=standalone --set persistence.size=1Gi \
            --set resources.requests.memory=256Mi --set resources.requests.cpu=100m
        description: deploy minio to test PVCs

  - name: smoke
    description: "run smoke tests"
    actions:
      - task: build:smoke-img-pkg
      - task: setup:full-core
