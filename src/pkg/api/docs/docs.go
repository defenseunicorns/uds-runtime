// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth": {
            "head": {
                "description": "Handle auth when running in local mode",
                "tags": [
                    "auth"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/hpas": {
            "get": {
                "description": "Get HPAs",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/hpas/{uid}": {
            "get": {
                "description": "Get HPA by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get hpa by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/limit-ranges": {
            "get": {
                "description": "Get LimitRanges",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/limit-ranges/{uid}": {
            "get": {
                "description": "Get LimitRange by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get limit-range by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/mutatingwebhooks": {
            "get": {
                "description": "Get MutatingWebhooks",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/mutatingwebhooks/{uid}": {
            "get": {
                "description": "Get MutatingWebhook by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get mutatingwebhook by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/poddisruptionbudgets": {
            "get": {
                "description": "Get PodDisruptionBudgets",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/poddisruptionbudgets/{uid}": {
            "get": {
                "description": "Get PodDisruptionBudget by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get poddisruptionbudget by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/priority-classes": {
            "get": {
                "description": "Get PriorityClasses",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/priority-classes/{uid}": {
            "get": {
                "description": "Get PriorityClass by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get priority-class by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/resource-quotas": {
            "get": {
                "description": "Get ResourceQuotas",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/resource-quotas/{uid}": {
            "get": {
                "description": "Get ResourceQuota by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get resource-quota by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/runtime-classes": {
            "get": {
                "description": "Get RuntimeClasses",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/runtime-classes/{uid}": {
            "get": {
                "description": "Get RuntimeClass by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get runtime-class by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/validatingwebhooks": {
            "get": {
                "description": "Get ValidatingWebhooks",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/cluster-ops/validatingwebhooks/{uid}": {
            "get": {
                "description": "Get ValidatingWebhook by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cluster ops"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get validatingwebhook by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/configs/configmaps": {
            "get": {
                "description": "Get ConfigMaps",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/configs/configmaps/{uid}": {
            "get": {
                "description": "Get ConfigMap by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get configmap by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/configs/secrets": {
            "get": {
                "description": "Get Secrets",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/configs/secrets/{uid}": {
            "get": {
                "description": "Get Secret by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get secret by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/configs/uds-exemptions": {
            "get": {
                "description": "Get UDS Exemptions",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/configs/uds-exemptions/{uid}": {
            "get": {
                "description": "Get UDS Exemption by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get uds exemption by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/configs/uds-packages": {
            "get": {
                "description": "Get UDS Packages",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/configs/uds-packages/{uid}": {
            "get": {
                "description": "Get UDS Package by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configs"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get uds package by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/custom-resource-defintions": {
            "get": {
                "description": "Get Custom Resource Definitions",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/custom-resource-defintions/{uid}": {
            "get": {
                "description": "Get Custom Resource Definition by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get CRD by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/events": {
            "get": {
                "description": "Get Events",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/events/{uid}": {
            "get": {
                "description": "Get Event by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get event by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/namespaces": {
            "get": {
                "description": "Get Namespaces",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/namespaces/{uid}": {
            "get": {
                "description": "Get Namespace by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get namespace by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/networks/endpoints": {
            "get": {
                "description": "Get Endpoints",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/networks/endpoints/{uid}": {
            "get": {
                "description": "Get Endpoint by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get endpoint by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/networks/networkpolicies": {
            "get": {
                "description": "Get NetworkPolicies",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/networks/networkpolicies/{uid}": {
            "get": {
                "description": "Get NetworkPolicy by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get networkpolicy by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/networks/services": {
            "get": {
                "description": "Get Services",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/networks/services/{uid}": {
            "get": {
                "description": "Get Service by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get service by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/networks/virtualservices": {
            "get": {
                "description": "Get VirtualServices",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/networks/virtualservices/{uid}": {
            "get": {
                "description": "Get VirtualService by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get virtualservice by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/nodes": {
            "get": {
                "description": "Get Nodes",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/nodes/{uid}": {
            "get": {
                "description": "Get Node by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get node by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/storage/persistentvolumeclaims": {
            "get": {
                "description": "Get PersistentVolumeClaims",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/storage/persistentvolumeclaims/{uid}": {
            "get": {
                "description": "Get PersistentVolumeClaim by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get persistentvolumeclaim by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/storage/persistentvolumes": {
            "get": {
                "description": "Get PersistentVolumes",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/storage/persistentvolumes/{uid}": {
            "get": {
                "description": "Get PersistentVolume by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get persistentvolume by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/storage/storageclasses": {
            "get": {
                "description": "Get StorageClasses",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/storage/storageclasses/{uid}": {
            "get": {
                "description": "Get StorageClass by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get storageclass by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/cronjobs": {
            "get": {
                "description": "Get CronJobs",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/cronjobs/{uid}": {
            "get": {
                "description": "Get CronJob by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get cronjob by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/daemonsets": {
            "get": {
                "description": "Get Daemonsets",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/daemonsets/{uid}": {
            "get": {
                "description": "Get Daemonset by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get daemonset by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/deployments": {
            "get": {
                "description": "Get Deployments",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/deployments/{uid}": {
            "get": {
                "description": "Get Deployment by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get deployment by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/jobs": {
            "get": {
                "description": "Get Jobs",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/jobs/{uid}": {
            "get": {
                "description": "Get Job by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get job by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/podmetrics": {
            "get": {
                "description": "Get PodMetrics",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "workloads"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/pods": {
            "get": {
                "description": "Get Pods",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/pods/{uid}": {
            "get": {
                "description": "Get Pod by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get pod by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/statefulsets": {
            "get": {
                "description": "Get Statefulsets",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Send the data once and close the connection. By default this is set to` + "`" + `false` + "`" + ` and will return a text/event-stream. If set to ` + "`" + `true` + "`" + ` the response content type is application/json.",
                        "name": "once",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/resources/workloads/statefulsets/{uid}": {
            "get": {
                "description": "Get Statefulset by UID",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workloads"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get statefulset by uid",
                        "name": "uid",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Send the data in dense format",
                        "name": "dense",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by fields. Format: .metadata.labels.app,.metadata.name,.spec.containers[].name,.status",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/cluster-check": {
            "get": {
                "description": "Get Cluster Connection Status",
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "cluster-connection-status"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "check the health of the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/monitor/pepr/{stream}": {
            "get": {
                "description": "Get Pepr data",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "monitor"
                ],
                "parameters": [
                    {
                        "enum": [
                            "AnyStream",
                            "PolicyStream",
                            "OperatorStream",
                            "AllowStream",
                            "DenyStream",
                            "MutateStream",
                            "FailureStream"
                        ],
                        "type": "string",
                        "description": "stream type to filter on, all streams by default",
                        "name": "stream",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
